// Generated by CoffeeScript 1.7.1
var Knex, app, express, knex, queries, server;

express = require("express");

app = express();

Knex = require("knex");

Knex.knex = Knex.initialize({
  client: "pg",
  connection: {
    localhost: "localhost",
    database: "names"
  }
});

knex = require("knex").knex;

queries = require("./lib/queries");

app.use(express["static"](__dirname + "/public"));

app.get("/api/surnames", function(req, res) {
  return knex("surnames").where(function() {
    var pass;
    if ([req.query.frequency, req.query.race].every(queries.isUndefined)) {
      return queries.fast(this);
    } else {
      pass = this;
      if (req.query.frequency) {
        pass = pass.where(function() {
          return queries.frequencyQuery(this, req.query.frequency);
        });
      }
      if (req.query.race) {
        pass = pass.where(function() {
          return this.where(req.query.race[0], ">", req.query.race[1]);
        });
      }
      return pass;
    }
  }).orderBy(knex.raw("RANDOM()")).limit(queries.limitQuery(req.query.limit)).then(function(query_results) {
    var results;
    results = {
      surnames: query_results
    };
    return res.json(results);
  });
});

server = app.listen(process.env.port || 3000, function() {
  return console.log("Listening on port %d", server.address().port);
});
