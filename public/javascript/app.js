// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

$(function() {
  var AppView, Name, NameList, NameView, app, getFirstNames, name, nameList, nameView;
  Name = (function(_super) {
    __extends(Name, _super);

    function Name() {
      return Name.__super__.constructor.apply(this, arguments);
    }

    Name.prototype.defaults = {
      first: 'Simon',
      last: 'Ganz'
    };

    Name.prototype.initialize = function() {
      return console.log("Initializing name " + (this.get('first')) + " " + (this.get('last')));
    };

    return Name;

  })(Backbone.Model);
  NameView = (function(_super) {
    __extends(NameView, _super);

    function NameView() {
      this.render = __bind(this.render, this);
      return NameView.__super__.constructor.apply(this, arguments);
    }

    NameView.prototype.tagName = 'li';

    NameView.prototype.tmpl = _.template($("#name-template").html());

    NameView.prototype.initialize = function() {
      return console.log("Initialized NameView");
    };

    NameView.prototype.render = function() {
      this.$el.html(this.tmpl(this.model.toJSON()));
      console.log("Rendering name");
      return this;
    };

    return NameView;

  })(Backbone.View);
  NameList = (function(_super) {
    __extends(NameList, _super);

    function NameList() {
      return NameList.__super__.constructor.apply(this, arguments);
    }

    NameList.prototype.model = Name;

    return NameList;

  })(Backbone.Collection);
  name = new Name({
    first: 'Marcus',
    last: 'Bowa'
  });
  nameView = new NameView({
    model: name
  });
  nameList = new NameList;
  getFirstNames = function(callback) {
    return $.getJSON('api/firstnames', function(data) {
      return callback(data.firstnames);
    });
  };
  $('.nameBtn').on('click', function() {
    console.log("Click!");
    console.log(nameList.length);
    getFirstNames(function(data) {
      console.log(data);
      return nameList.add(_.map(data, function(name) {
        return {
          first: name.name
        };
      }));
    });
    return false;
  });
  AppView = (function(_super) {
    __extends(AppView, _super);

    function AppView() {
      return AppView.__super__.constructor.apply(this, arguments);
    }

    AppView.prototype.el = '#raandy';

    AppView.prototype.initialize = function() {
      return this.listenTo(nameList, 'add', this.addOne);
    };

    AppView.prototype.addOne = function(name) {
      var view;
      view = new NameView({
        model: name
      });
      return $('#names').append(view.render().el);
    };

    return AppView;

  })(Backbone.View);
  app = new AppView;
  nameList.add(new Name({
    first: 'Simon',
    last: 'Ganz'
  }));
  return nameList.add(new Name({
    first: 'JC',
    last: 'Ganz'
  }));
});
